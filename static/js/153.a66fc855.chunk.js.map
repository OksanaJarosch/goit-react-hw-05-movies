{"version":3,"file":"static/js/153.a66fc855.chunk.js","mappings":"0RAIaA,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAMvBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2EAOtBG,EAAaL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6KAOtBK,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,mEAMzBQ,EAAgBV,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yB,oCCvBxB,SAASU,IAEpB,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,IAExBG,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACA,OAAlBnB,GAAa,GAAKiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEYC,EAAAA,EAAAA,MAAmB,OAAAL,EAAAE,EAAAI,KAArCL,EAAOD,EAAPC,QACRR,GAAU,SAAAU,GAAI,SAAAI,QAAAC,EAAAA,EAAAA,GAAQL,IAAIK,EAAAA,EAAAA,GAAKP,GAAO,IAAEC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAExCb,EAAQa,EAAAO,IAAO,QAEI,OAFJP,EAAAC,KAAA,GAEflB,GAAa,GAAMiB,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAE1B,kBAVkB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAWnBlB,GACJ,GAAG,IAEH,IAAMmB,GAAWC,EAAAA,EAAAA,MAEjB,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAC,SAAA,EACNC,EAAAA,EAAAA,KAACrD,EAAW,CAAAoD,SAAC,mBAEZ9B,IAAS+B,EAAAA,EAAAA,KAACC,EAAAA,EAAmB,CAAAF,SAAC,gCAC9BlC,IAAamC,EAAAA,EAAAA,KAACC,EAAAA,EAAmB,CAAAF,SAAC,gBAEnCC,EAAAA,EAAAA,KAACjD,EAAU,CAAAgD,SACN1B,EAAO6B,OAAS,GACb7B,EAAO8B,KACH,SAACC,EAAOC,GACJ,IAAQC,EACJF,EADIE,GAAIC,EACRH,EADQG,eAAgBC,EACxBJ,EADwBI,YAG1BC,EADe,kCACID,EAErB,OACIR,EAAAA,EAAAA,KAAC/C,EAAU,CAAA8C,UACPF,EAAAA,EAAAA,MAAC1C,EAAU,CAACuD,GAAE,UAAAtB,OAAYkB,GAAMK,MAAO,CAACC,KAAMjB,GAAUI,SAAA,CACvDS,GAAeR,EAAAA,EAAAA,KAAA,OAAKa,IAAKJ,EAAOK,IAAKP,KAAuBP,EAAAA,EAAAA,KAACe,EAAAA,IAAsB,CAACC,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,MAAO,gBACtInB,EAAAA,EAAAA,KAAC1C,EAAa,CAAAyC,SACbQ,QAJYF,EAQzB,QAMxB,C","sources":["pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { styled } from \"styled-components\";\n\n\nexport const StyledTitle = styled.h1`\nmargin-bottom: 36px;\nmargin-top: 20px;\ncolor: #424242;\n`;\n\nexport const StyledList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\nlist-style: none;\n`;\n\nexport const StyledItem = styled.li`\nwidth: 200px;\nborder-radius: 8px;\noverflow: hidden;\nbox-shadow: 0px 0.8px 2px rgba(0,0,0,.032),0px 2.7px 6.7px rgba(0,0,0,.048),0px 12px 30px rgba(0,0,0,.08);\n`;\n\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\nfont-size: 20px;\ncolor: black;\n`;\n\nexport const InfoContainer = styled.div`\npadding: 8px;\n`;\n","import { useEffect, useState } from \"react\"\nimport { getTrendingMovies } from \"services/api\";\nimport { InfoContainer, StyledItem, StyledLink, StyledList, StyledTitle } from \"./HomePage.styled\";\nimport { MdOutlineNoPhotography } from \"react-icons/md\";\nimport { useLocation } from \"react-router-dom\";\nimport { Container, StyledSecondaryText } from \"GlobalStyle.styled\";\n\nexport default function HomePage() {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        const fetchTrending = async () => {\n            setIsLoading(true)\n            try {\n                const { results } = await getTrendingMovies()\n                setMovies(prev => [...prev, ...results])\n            } catch (error) {\n                setError(error)\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        fetchTrending()\n    }, [])\n\n    const location = useLocation();\n\n    return (\n        <Container>\n            <StyledTitle>Trending today</StyledTitle>\n\n            {error && <StyledSecondaryText>Oops, something went wrong.</StyledSecondaryText>}\n            {isLoading && <StyledSecondaryText>Loading...</StyledSecondaryText>}\n\n            <StyledList>\n                {movies.length > 0 && (\n                    movies.map(\n                        (movie, index) => {\n                            const { id, original_title, poster_path\n                            } = movie;\n                            const BASE_URL = \"https://image.tmdb.org/t/p/w200\";\n                        const photo = BASE_URL + poster_path;\n\n                            return (\n                                <StyledItem key={index}>\n                                    <StyledLink to={`movies/${id}`} state={{from: location}}>\n                                    {poster_path ? (<img src={photo} alt={original_title} />) : (<MdOutlineNoPhotography style={{ width: '200px', height: \"200px\", color: '#8080803b' }} />)}\n                                    <InfoContainer>\n                                    {original_title}\n                                        </InfoContainer>\n                                        </StyledLink>\n                                </StyledItem>)\n                        }\n                    )\n                )}\n            </StyledList>\n        </Container>\n    )\n}"],"names":["StyledTitle","styled","_templateObject","_taggedTemplateLiteral","StyledList","_templateObject2","StyledItem","_templateObject3","StyledLink","Link","_templateObject4","InfoContainer","_templateObject5","HomePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movies","setMovies","useEffect","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrendingMov","results","_context","prev","next","getTrendingMovies","sent","concat","_toConsumableArray","t0","finish","stop","apply","arguments","location","useLocation","_jsxs","Container","children","_jsx","StyledSecondaryText","length","map","movie","index","id","original_title","poster_path","photo","to","state","from","src","alt","MdOutlineNoPhotography","style","width","height","color"],"sourceRoot":""}