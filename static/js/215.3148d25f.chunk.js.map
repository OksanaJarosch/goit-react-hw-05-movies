{"version":3,"file":"static/js/215.3148d25f.chunk.js","mappings":"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","sources":["pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { styled } from \"styled-components\";\n\n\nexport const StyledForm = styled.form`\nmargin: 40px 0;\ntext-align: center;\nposition: relative;\n`;\n\nexport const StyledList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\nlist-style: none;\n`;\n\nexport const StyledItem = styled.li`\nwidth: 200px;\nborder-radius: 8px;\noverflow: hidden;\nbox-shadow: 0px 0.8px 2px rgba(0,0,0,.032),0px 2.7px 6.7px rgba(0,0,0,.048),0px 12px 30px rgba(0,0,0,.08);\n`;\n\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\nfont-size: 20px;\ncolor: black;\n`;\n\nexport const InfoContainer = styled.div`\npadding: 8px;\n`;\n\nexport const StyledInput = styled.input`\nwidth: 300px;\nfont-size: 14px;\npadding: 5px 12px;\nline-height: 20px;\ncolor: #24292e;\nvertical-align: middle;\nbackground-color: #ffffff;\nbackground-repeat: no-repeat;\nbackground-position: right 8px center;\nborder: 1px solid #a2a2a2;\nborder-radius: 6px;\noutline: none;\nbox-shadow: rgba(225, 228, 232, 0.2) 0px 1px 0px 0px inset;\n\n&:focus{\n    border-color: #0366d6;\n    outline: none;\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n}\n`;","import { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { searchMovies } from \"services/api\";\nimport { InfoContainer, StyledForm, StyledInput, StyledItem, StyledLink, StyledList } from \"./MoviesPage.styled\";\nimport { MdOutlineNoPhotography } from \"react-icons/md\";\nimport { Container, StyledSecondaryText } from \"GlobalStyle.styled\";\n\n\nexport default function MoviesPage() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [movies, setMovies] = useState([]);\n\n    const [params, setParams] = useSearchParams()\n    const searchedMovie = params.get(\"movie\") ?? \"\";\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n        setIsLoading(true)\n        try {\n            if (!searchedMovie) {\n                return\n            }\n            const {results} = await searchMovies(searchedMovie)\n            if (!results) {\n                return\n            }\n            setMovies(results)\n\n        } catch (error) {\n            setError(error)\n            \n        } finally {\n            setIsLoading(false)\n        }};\n\n        fetchMovie()\n\n    }, [searchedMovie])\n    \n    const location = useLocation();\n\n    \n    const onSearch = (evt) => {\n        evt.preventDefault()\n        \n        const { value } = evt.target.elements.movie; \n        if (value) {\n        setParams({movie: value})\n        }\n    } \n    \n    return (\n        <>\n            <StyledForm onSubmit={onSearch}>\n                <StyledInput\n                    type=\"text\" autoComplete=\"off\" placeholder=\"Search movie\"\n                    name=\"movie\"\n                >\n                </StyledInput>\n            </StyledForm>\n\n            {error && <StyledSecondaryText>Oops, something went wrong.</StyledSecondaryText>}\n            {isLoading && <StyledSecondaryText>Loading...</StyledSecondaryText>}\n\n            \n\n            {movies.length > 0 && !isLoading && (\n            <Container>\n            <StyledList>\n                {movies.length > 0 && (\n                    movies.map(\n                        (movie, index) => {\n                            const { id, original_title, poster_path\n                            } = movie;\n                            const BASE_URL = \"https://image.tmdb.org/t/p/w200\";\n                        const photo = BASE_URL + poster_path;\n\n                            return (\n                                \n                                <StyledItem key={index}>\n                                    <StyledLink to={`${id}`} state={{from: location}}>\n                                    {poster_path ? (<img src={photo} alt={original_title} />) : (<MdOutlineNoPhotography style={{ width: '200px', height: \"200px\", color: '#8080803b' }} />)}\n                                    <InfoContainer>\n                                    {original_title}\n                                        </InfoContainer>\n                                        </StyledLink>\n                                </StyledItem>\n                            )\n                        }\n                    )\n                )}\n                    </StyledList>\n                    </Container>\n            )}\n\n            {movies.length === 0 && !isLoading && searchedMovie &&<StyledSecondaryText>Movie \"{searchedMovie}\" not found.</StyledSecondaryText>}\n            </>\n    )}"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","StyledList","_templateObject2","StyledItem","_templateObject3","StyledLink","Link","_templateObject4","InfoContainer","_templateObject5","StyledInput","_templateObject6","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","searchedMovie","get","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$searchMovies","results","_context","prev","next","abrupt","searchMovies","sent","t0","finish","stop","apply","arguments","location","useLocation","_jsxs","_Fragment","children","_jsx","onSubmit","evt","preventDefault","value","target","elements","movie","type","autoComplete","placeholder","name","StyledSecondaryText","length","Container","map","index","id","original_title","poster_path","photo","to","concat","state","from","src","alt","MdOutlineNoPhotography","style","width","height","color"],"sourceRoot":""}